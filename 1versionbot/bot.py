import telebot
from telebot import types
import math

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot('7898996873:AAGsxvGiivcMSISQOMMO11dQFuUBINPjXII')

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_pages = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤
user_states = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
selected_subjects = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
lesson_pages = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Ä–æ–∫–æ–≤
selected_lessons = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
ADMIN_SETTINGS = {
    'total_subjects': 30,  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    'subjects_per_page': 4,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    'lessons_per_page': 4,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    'total_lessons': 10  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤
}

def get_subjects_markup(page=1):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    start_idx = (page - 1) * ADMIN_SETTINGS['subjects_per_page']
    end_idx = min(start_idx + ADMIN_SETTINGS['subjects_per_page'], ADMIN_SETTINGS['total_subjects'])
    
    buttons = [types.KeyboardButton(f"–ü—Ä–µ–¥–º–µ—Ç {i}") for i in range(start_idx + 1, end_idx + 1)]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if page > 1:
        buttons.append(types.KeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"))
    if end_idx < ADMIN_SETTINGS['total_subjects']:
        buttons.append(types.KeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"))
    
    markup.add(*buttons)
    markup.add(types.KeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return markup

def get_lessons_markup(subject_num, page=1):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É—Ä–æ–∫–æ–≤
    start_idx = (page - 1) * ADMIN_SETTINGS['lessons_per_page']
    end_idx = min(start_idx + ADMIN_SETTINGS['lessons_per_page'], ADMIN_SETTINGS['total_lessons'])
    
    buttons = [types.KeyboardButton(f"–£—Ä–æ–∫ {i}") for i in range(start_idx + 1, end_idx + 1)]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if page > 1:
        buttons.append(types.KeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–æ–≤"))
    if end_idx < ADMIN_SETTINGS['total_lessons']:
        buttons.append(types.KeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–æ–≤"))
    
    markup.add(*buttons)
    markup.add(types.KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º"))
    return markup

def get_lesson_options_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton("üìù –ö–∞—Ä—Ç–æ—á–∫–∞")
    btn2 = types.KeyboardButton("üìã –¢–µ—Å—Ç")
    markup.add(btn1, btn2)
    markup.add(types.KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫–∞–º"))
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üë®‚Äçüéì –í–æ–π—Ç–∏ –∫–∞–∫ —É—á–µ–Ω–∏–∫")
    btn2 = types.KeyboardButton("üë®‚Äçüè´ –í–æ–π—Ç–∏ –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, 
                     f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í —ç—Ç–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –ø–æ —É—Ä–æ–∫–∞–º –≤ ITHUB",
                     reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, 
                     "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                     "/start - –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
                     "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def echo(message):
    if message.text == "üë®‚Äçüéì –í–æ–π—Ç–∏ –∫–∞–∫ —É—á–µ–Ω–∏–∫":
        user_pages[message.chat.id] = 1
        user_states[message.chat.id] = "subjects"
        markup = get_subjects_markup(1)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)
    
    elif message.text == "üë®‚Äçüè´ –í–æ–π—Ç–∏ –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å":
        bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω")
    
    elif message.text == "‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        user_states[message.chat.id] = "main"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üë®‚Äçüéì –í–æ–π—Ç–∏ –∫–∞–∫ —É—á–µ–Ω–∏–∫")
        btn2 = types.KeyboardButton("üë®‚Äçüè´ –í–æ–π—Ç–∏ –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)
    
    elif message.text.startswith("–ü—Ä–µ–¥–º–µ—Ç "):
        subject_num = int(message.text.split()[1])
        selected_subjects[message.chat.id] = subject_num
        user_states[message.chat.id] = "lessons"
        lesson_pages[message.chat.id] = 1
        markup = get_lessons_markup(subject_num, 1)
        bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç {subject_num}. –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫:", reply_markup=markup)
    
    elif message.text.startswith("–£—Ä–æ–∫ "):
        lesson_num = int(message.text.split()[1])
        subject_num = selected_subjects.get(message.chat.id, 0)
        selected_lessons[message.chat.id] = lesson_num
        user_states[message.chat.id] = "lesson_options"
        markup = get_lesson_options_markup()
        bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω —É—Ä–æ–∫ {lesson_num} –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num}. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    
    elif message.text == "üìù –ö–∞—Ä—Ç–æ—á–∫–∞":
        lesson_num = selected_lessons.get(message.chat.id, 0)
        subject_num = selected_subjects.get(message.chat.id, 0)
        bot.send_message(message.chat.id, f"–ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —É—Ä–æ–∫–∞ {lesson_num} –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num} –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
    
    elif message.text == "üìã –¢–µ—Å—Ç":
        lesson_num = selected_lessons.get(message.chat.id, 0)
        subject_num = selected_subjects.get(message.chat.id, 0)
        bot.send_message(message.chat.id, f"–¢–µ—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ {lesson_num} –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num} –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    elif message.text == "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫–∞–º":
        subject_num = selected_subjects.get(message.chat.id, 0)
        user_states[message.chat.id] = "lessons"
        markup = get_lessons_markup(subject_num, lesson_pages.get(message.chat.id, 1))
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num}:", reply_markup=markup)
    
    elif message.text == "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º":
        user_states[message.chat.id] = "subjects"
        markup = get_subjects_markup(user_pages.get(message.chat.id, 1))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)
    
    elif message.text == "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
        if user_states.get(message.chat.id) == "subjects":
            current_page = user_pages.get(message.chat.id, 1)
            if current_page > 1:
                user_pages[message.chat.id] = current_page - 1
                markup = get_subjects_markup(current_page - 1)
                bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)
    
    elif message.text == "‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
        if user_states.get(message.chat.id) == "subjects":
            current_page = user_pages.get(message.chat.id, 1)
            max_pages = math.ceil(ADMIN_SETTINGS['total_subjects'] / ADMIN_SETTINGS['subjects_per_page'])
            if current_page < max_pages:
                user_pages[message.chat.id] = current_page + 1
                markup = get_subjects_markup(current_page + 1)
                bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)
    
    elif message.text == "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–æ–≤":
        if user_states.get(message.chat.id) == "lessons":
            current_page = lesson_pages.get(message.chat.id, 1)
            if current_page > 1:
                lesson_pages[message.chat.id] = current_page - 1
                subject_num = selected_subjects.get(message.chat.id, 0)
                markup = get_lessons_markup(subject_num, current_page - 1)
                bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num}:", reply_markup=markup)
    
    elif message.text == "‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–æ–≤":
        if user_states.get(message.chat.id) == "lessons":
            current_page = lesson_pages.get(message.chat.id, 1)
            max_pages = math.ceil(ADMIN_SETTINGS['total_lessons'] / ADMIN_SETTINGS['lessons_per_page'])
            if current_page < max_pages:
                lesson_pages[message.chat.id] = current_page + 1
                subject_num = selected_subjects.get(message.chat.id, 0)
                markup = get_lessons_markup(subject_num, current_page + 1)
                bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ {subject_num}:", reply_markup=markup)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True) 